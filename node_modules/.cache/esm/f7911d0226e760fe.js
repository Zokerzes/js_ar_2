let src,dest,series,parallel,pug,stylus;_26e‍.x([["html",()=>html],["css",()=>css],["js",()=>js],["make",()=>make],["prod",()=>prod],["dev",()=>dev],["default",()=>_26e‍.o]]);_26e‍.w("gulp",[["src",["src"],function(v){src=v}],["dest",["dest"],function(v){dest=v}],["series",["series"],function(v){series=v}],["parallel",["parallel"],function(v){parallel=v}]]);_26e‍.w("gulp-pug",[["default",["pug"],function(v){pug=v}]]);_26e‍.w("gulp-stylus",[["default",["stylus"],function(v){stylus=v}]]);





const
  SRC = './src/',
  DEST = './_dest/';

       function html() {
  return src(SRC + '*.pug')
    .pipe(pug({ pretty: true }))
    .pipe(dest(DEST));
}

       function css() {
  return src(SRC + '*.styl')
    .pipe(stylus())
    .pipe(dest(DEST));
}

       function js() {
  return src(SRC + '*.js')
    .pipe(dest(DEST));
}

async function upload() {
  console.log('Load files on server');
}

async function serv() {
  console.log('dev server');
}

async function setMinification() {
}

async function cleanDir() {
}

       const make = parallel(html, css, js);

       const prod = series(setMinification, cleanDir, make, upload);
       const dev = series(make, serv);
_26e‍.d(dev);

